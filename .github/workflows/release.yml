name: Build Syndo Artifacts
on:
  push:
    branches:
      - release-*
    tags:
      - release-*
jobs:
  verify:
    # test on all target os
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-2016
    steps:
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

  metadata:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Capture pom version
        run: |
          echo "POM_VER=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Capture branch info
        if: contains(github.ref, 'refs/heads/')
        run: |
          echo "PRERELEASE=true" >> $GITHUB_ENV

      - name: Capture branch info
        if: "!contains(github.ref, 'refs/heads/')"
        run: |
          echo "PRERELEASE=false" >> $GITHUB_ENV

      - name: Capture outputs
        id: metadata
        run: |
          echo "::set-output name=pom-ver::${{ env.POM_VER }}"
          echo "::set-output name=decide::${{ env.PRERELEASE }}"
          echo "::set-output name=short-branch::${GITHUB_REF##*/}"

    outputs:
      short-branch: ${{ steps.metadata.outputs.short-branch }}
      pom-ver: ${{ steps.metadata.outputs.pom-ver }}
      prerelease: ${{ steps.metadata.outputs.prerelease }}

  prepare:
    needs: [metadata, verify]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Delete release/tag if it exists
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{ needs.metadata.outputs.short-branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create target release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ needs.metadata.outputs.short-branch }}
          tag: ${{ needs.metadata.outputs.short-branch }}
          prerelease: ${{ needs.metadata.outputs.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: ${{ github.sha }}

  build_jars:
    # dependency on verification
    needs: [metadata, prepare]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots -DskipTests package

      - name: Upload java binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/syndo-${{ needs.metadata.outputs.pom-ver }}.jar
          asset_name: syndo-${{ needs.metadata.outputs.pom-ver }}.jar
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: ${{ needs.metadata.outputs.prerelease }}

      - name: Upload java executable binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/syndo-${{ needs.metadata.outputs.pom-ver }}-executable.jar
          asset_name: syndo-${{ needs.metadata.outputs.pom-ver }}-executable.jar
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: ${{ needs.metadata.outputs.prerelease }}

      - name: Publish snapshot
        if: contains(github.ref, 'refs/heads/')
        run: mvn -Drevision=${{ needs.metadata.outputs.pom-ver }}-SNAPSHOT  --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release
        if: "!contains(github.ref, 'refs/heads/')"
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_native:
    # dependency on verification
    needs: [metadata, prepare]

    # build on all target os
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            gu-binary: gu
            native-asset-suffix: linux-amd64
            target-suffix: ""
          - os: windows-2016
            gu-binary: gu.cmd
            native-asset-suffix: windows-amd64.exe
            target-suffix: .exe
    steps:
      # install GraalVM for native build
      - uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.0.0.2'
          java: 'java11'
          arch: 'amd64'

      - name: Add msbuild to PATH
        if: contains(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Add toolkit to path
        if: contains(matrix.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image

      - uses: actions/checkout@v2

      - name: Build with Maven
        run: |
          mvn --batch-mode --update-snapshots -DskipTests -Pnative package

      - name: Upload native binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/syndo${{ matrix.target-suffix }}
          asset_name: syndo-${{ needs.metadata.outputs.pom-ver }}-${{ matrix.native-asset-suffix }}
          tag: ${{ github.ref }}
          overwrite: true
          prerelease: ${{ needs.metadata.outputs.prerelease }}